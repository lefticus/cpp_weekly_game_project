language: cpp

install:
  # Pip cannot install Conan without these upgrades
  - python3 -m pip install --upgrade pip setuptools
  # Install Conan and CMake >= 3.15
  - python3 -m pip install conan cmake

  # Fail if we can't run Conan.
  - conan --version
  

jobs:
  include:
    - os: osx
      compiler: clang
      osx_image: xcode12.2    # Let's hope this gets us a more current clang
      env:
        - MACOSX_DEPLOYMENT_TARGET=10.15
        - LLVM_VER="11"
        - CPPFLAGS="-I/usr/local/opt/llvm/include"
        - LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        - MATRIX_EVAL="CC=clang-${LLVM_VER} && CXX=clang++-${LLVM_VER}"
        - PATH="/usr/local/opt/llvm/bin:$PATH"
        - PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"

        #For compilers to find libffi you may need to set:
#        - LDFLAGS="-L/usr/local/opt/libffi/lib"
#        - CPPFLAGS="-I/usr/local/opt/libffi/include"
      addons:
        homebrew:
          packages:
            - llvm@11
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - GCC_VER="10"
        - MATRIX_EVAL="CC=gcc-${GCC_VER} && CXX=g++-${GCC_VER}"

      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-10
            - g++-10
            - doxygen
            - python3-pip
            - pkg-config
            - libgl1-mesa-dev
      after_script:
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov-${GCC_VER}
    - os: linux
      dist: bionic
      compiler: clang
      env:
        - LLVM_VER="11"
        - MATRIX_EVAL="CC=clang-${LLVM_VER} && CXX=clang++-${LLVM_VER}"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - gcc-10
            - g++-10
            - clang-11
            - clang++-11
            - doxygen
            - python3-pip
            - pkg-config
            - libgl1-mesa-dev


before_script:
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cmake -S . -B ./build -D ENABLE_COVERAGE:BOOL=TRUE
  - cmake --build ./build -- -j2
  - ctest -j2
